Terminals unused in grammar

   TRUEASSIGN
   ASSIGN
   SUM
   RES
   MUL
   DIV
   EVAL
   EQ
   NEQ
   LES
   MOR
   LEQ
   MEQ
   ITERLIMIT


Grammar

    0 $accept: root $end

    1 root: %empty
    2     | root line

    3 lines: line lines
    4      | line

    5 line: structure
    6     | exp ';'
    7     | ENTER

    8 exp: assign
    9    | call

   10 @1: %empty

   11 assign: ID @1 '=' unitA

   12 @2: %empty

   13 call: ID @2 '(' args ')'

   14 args: element COM args
   15     | element
   16     | call COM args
   17     | call
   18     | %empty

   19 element: ID
   20        | NUM
   21        | '-' NUM
   22        | STRING

   23 structure: ifStructure
   24          | ifElseStructure
   25          | whileStructure
   26          | forStructure
   27          | functionStructure

   28 statement: comparisons
   29          | '!' comparisons

   30 unitA: unitA operatorA unitB
   31      | unitB

   32 unitB: unitB operatorB element
   33      | unitB operatorB call
   34      | element
   35      | call

   36 comparison: unitA compOperator comparison
   37           | unitA

   38 comparisons: '(' comparisons ')' compOperator '(' comparisons ')'
   39            | comparison

   40 operatorA: '+'
   41          | '-'

   42 operatorB: '/'
   43          | '*'

   44 compOperator: '=' '='
   45             | '!' '='
   46             | '<'
   47             | '>'
   48             | '<' '='
   49             | '>' '='
   50             | AND
   51             | OR

   52 $@3: %empty

   53 ifStructure: IF '(' statement $@3 ')' '{' lines '}'

   54 $@4: %empty

   55 $@5: %empty

   56 ifElseStructure: IFELSE '(' statement $@4 ')' '{' lines $@5 '}' '{' lines '}'

   57 @6: %empty

   58 @7: %empty

   59 $@8: %empty

   60 $@9: %empty

   61 $@10: %empty

   62 whileStructure: WHILE '(' @6 statement @7 $@8 ')' '{' $@9 lines $@10 '}'

   63 @11: %empty

   64 @12: %empty

   65 $@13: %empty

   66 @14: %empty

   67 @15: %empty

   68 $@16: %empty

   69 $@17: %empty

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 '}'

   71 @18: %empty

   72 functionStructure: DEF ID @18 '(' args ')' '{' lines '}'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 29 45
'(' (40) 13 38 53 56 62 70 72
')' (41) 13 38 53 56 62 70 72
'*' (42) 43
'+' (43) 40
'-' (45) 21 41
'/' (47) 42
';' (59) 6 70
'<' (60) 46 48
'=' (61) 11 44 45 48 49
'>' (62) 47 49
'{' (123) 53 56 62 70 72
'}' (125) 53 56 62 70 72
error (256)
ID (258) 11 13 19 72
NUM (259) 20 21
ENTER (260) 7
STRING (261) 22
COM (262) 14 16
IF (263) 53
IFELSE (264) 56
WHILE (265) 62
FOR (266) 70
DEF (267) 72
TRUEASSIGN (268)
ASSIGN (269)
SUM (270)
RES (271)
MUL (272)
DIV (273)
EVAL (274)
EQ (275)
NEQ (276)
LES (277)
MOR (278)
LEQ (279)
MEQ (280)
ITERLIMIT (281)
AND (282) 50
OR (283) 51


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
root (43)
    on left: 1 2, on right: 0 2
lines (44)
    on left: 3 4, on right: 3 53 56 62 70 72
line (45)
    on left: 5 6 7, on right: 2 3 4
exp (46)
    on left: 8 9, on right: 6
assign (47)
    on left: 11, on right: 8 70
@1 (48)
    on left: 10, on right: 11
call (49)
    on left: 13, on right: 9 16 17 33 35
@2 (50)
    on left: 12, on right: 13
args (51)
    on left: 14 15 16 17 18, on right: 13 14 16 72
element (52)
    on left: 19 20 21 22, on right: 14 15 32 34
structure (53)
    on left: 23 24 25 26 27, on right: 5
statement (54)
    on left: 28 29, on right: 53 56 62 70
unitA (55)
    on left: 30 31, on right: 11 30 36 37
unitB (56)
    on left: 32 33 34 35, on right: 30 31 32 33
comparison (57)
    on left: 36 37, on right: 36 39
comparisons (58)
    on left: 38 39, on right: 28 29 38
operatorA (59)
    on left: 40 41, on right: 30
operatorB (60)
    on left: 42 43, on right: 32 33
compOperator (61)
    on left: 44 45 46 47 48 49 50 51, on right: 36 38
ifStructure (62)
    on left: 53, on right: 23
$@3 (63)
    on left: 52, on right: 53
ifElseStructure (64)
    on left: 56, on right: 24
$@4 (65)
    on left: 54, on right: 56
$@5 (66)
    on left: 55, on right: 56
whileStructure (67)
    on left: 62, on right: 25
@6 (68)
    on left: 57, on right: 62
@7 (69)
    on left: 58, on right: 62
$@8 (70)
    on left: 59, on right: 62
$@9 (71)
    on left: 60, on right: 62
$@10 (72)
    on left: 61, on right: 62
forStructure (73)
    on left: 70, on right: 26
@11 (74)
    on left: 63, on right: 70
@12 (75)
    on left: 64, on right: 70
$@13 (76)
    on left: 65, on right: 70
@14 (77)
    on left: 66, on right: 70
@15 (78)
    on left: 67, on right: 70
$@16 (79)
    on left: 68, on right: 70
$@17 (80)
    on left: 69, on right: 70
functionStructure (81)
    on left: 72, on right: 27
@18 (82)
    on left: 71, on right: 72


State 0

    0 $accept: . root $end

    $default  reduce using rule 1 (root)

    root  go to state 1


State 1

    0 $accept: root . $end
    2 root: root . line

    $end    shift, and go to state 2
    ID      shift, and go to state 3
    ENTER   shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    DEF     shift, and go to state 9

    line               go to state 10
    exp                go to state 11
    assign             go to state 12
    call               go to state 13
    structure          go to state 14
    ifStructure        go to state 15
    ifElseStructure    go to state 16
    whileStructure     go to state 17
    forStructure       go to state 18
    functionStructure  go to state 19


State 2

    0 $accept: root $end .

    $default  accept


State 3

   11 assign: ID . @1 '=' unitA
   13 call: ID . @2 '(' args ')'

    '('       reduce using rule 12 (@2)
    $default  reduce using rule 10 (@1)

    @1  go to state 20
    @2  go to state 21


State 4

    7 line: ENTER .

    $default  reduce using rule 7 (line)


State 5

   53 ifStructure: IF . '(' statement $@3 ')' '{' lines '}'

    '('  shift, and go to state 22


State 6

   56 ifElseStructure: IFELSE . '(' statement $@4 ')' '{' lines $@5 '}' '{' lines '}'

    '('  shift, and go to state 23


State 7

   62 whileStructure: WHILE . '(' @6 statement @7 $@8 ')' '{' $@9 lines $@10 '}'

    '('  shift, and go to state 24


State 8

   70 forStructure: FOR . '(' assign ';' @11 statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 '}'

    '('  shift, and go to state 25


State 9

   72 functionStructure: DEF . ID @18 '(' args ')' '{' lines '}'

    ID  shift, and go to state 26


State 10

    2 root: root line .

    $default  reduce using rule 2 (root)


State 11

    6 line: exp . ';'

    ';'  shift, and go to state 27


State 12

    8 exp: assign .

    $default  reduce using rule 8 (exp)


State 13

    9 exp: call .

    $default  reduce using rule 9 (exp)


State 14

    5 line: structure .

    $default  reduce using rule 5 (line)


State 15

   23 structure: ifStructure .

    $default  reduce using rule 23 (structure)


State 16

   24 structure: ifElseStructure .

    $default  reduce using rule 24 (structure)


State 17

   25 structure: whileStructure .

    $default  reduce using rule 25 (structure)


State 18

   26 structure: forStructure .

    $default  reduce using rule 26 (structure)


State 19

   27 structure: functionStructure .

    $default  reduce using rule 27 (structure)


State 20

   11 assign: ID @1 . '=' unitA

    '='  shift, and go to state 28


State 21

   13 call: ID @2 . '(' args ')'

    '('  shift, and go to state 29


State 22

   53 ifStructure: IF '(' . statement $@3 ')' '{' lines '}'

    ID      shift, and go to state 30
    NUM     shift, and go to state 31
    STRING  shift, and go to state 32
    '('     shift, and go to state 33
    '-'     shift, and go to state 34
    '!'     shift, and go to state 35

    call         go to state 36
    element      go to state 37
    statement    go to state 38
    unitA        go to state 39
    unitB        go to state 40
    comparison   go to state 41
    comparisons  go to state 42


State 23

   56 ifElseStructure: IFELSE '(' . statement $@4 ')' '{' lines $@5 '}' '{' lines '}'

    ID      shift, and go to state 30
    NUM     shift, and go to state 31
    STRING  shift, and go to state 32
    '('     shift, and go to state 33
    '-'     shift, and go to state 34
    '!'     shift, and go to state 35

    call         go to state 36
    element      go to state 37
    statement    go to state 43
    unitA        go to state 39
    unitB        go to state 40
    comparison   go to state 41
    comparisons  go to state 42


State 24

   62 whileStructure: WHILE '(' . @6 statement @7 $@8 ')' '{' $@9 lines $@10 '}'

    $default  reduce using rule 57 (@6)

    @6  go to state 44


State 25

   70 forStructure: FOR '(' . assign ';' @11 statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 '}'

    ID  shift, and go to state 45

    assign  go to state 46


State 26

   72 functionStructure: DEF ID . @18 '(' args ')' '{' lines '}'

    $default  reduce using rule 71 (@18)

    @18  go to state 47


State 27

    6 line: exp ';' .

    $default  reduce using rule 6 (line)


State 28

   11 assign: ID @1 '=' . unitA

    ID      shift, and go to state 30
    NUM     shift, and go to state 31
    STRING  shift, and go to state 32
    '-'     shift, and go to state 34

    call     go to state 36
    element  go to state 37
    unitA    go to state 48
    unitB    go to state 40


State 29

   13 call: ID @2 '(' . args ')'

    ID      shift, and go to state 30
    NUM     shift, and go to state 31
    STRING  shift, and go to state 32
    '-'     shift, and go to state 34

    $default  reduce using rule 18 (args)

    call     go to state 49
    args     go to state 50
    element  go to state 51


State 30

   13 call: ID . @2 '(' args ')'
   19 element: ID .

    '('       reduce using rule 12 (@2)
    $default  reduce using rule 19 (element)

    @2  go to state 21


State 31

   20 element: NUM .

    $default  reduce using rule 20 (element)


State 32

   22 element: STRING .

    $default  reduce using rule 22 (element)


State 33

   38 comparisons: '(' . comparisons ')' compOperator '(' comparisons ')'

    ID      shift, and go to state 30
    NUM     shift, and go to state 31
    STRING  shift, and go to state 32
    '('     shift, and go to state 33
    '-'     shift, and go to state 34

    call         go to state 36
    element      go to state 37
    unitA        go to state 39
    unitB        go to state 40
    comparison   go to state 41
    comparisons  go to state 52


State 34

   21 element: '-' . NUM

    NUM  shift, and go to state 53


State 35

   29 statement: '!' . comparisons

    ID      shift, and go to state 30
    NUM     shift, and go to state 31
    STRING  shift, and go to state 32
    '('     shift, and go to state 33
    '-'     shift, and go to state 34

    call         go to state 36
    element      go to state 37
    unitA        go to state 39
    unitB        go to state 40
    comparison   go to state 41
    comparisons  go to state 54


State 36

   35 unitB: call .

    $default  reduce using rule 35 (unitB)


State 37

   34 unitB: element .

    $default  reduce using rule 34 (unitB)


State 38

   53 ifStructure: IF '(' statement . $@3 ')' '{' lines '}'

    $default  reduce using rule 52 ($@3)

    $@3  go to state 55


State 39

   30 unitA: unitA . operatorA unitB
   36 comparison: unitA . compOperator comparison
   37           | unitA .

    AND  shift, and go to state 56
    OR   shift, and go to state 57
    '='  shift, and go to state 58
    '-'  shift, and go to state 59
    '!'  shift, and go to state 60
    '+'  shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63

    $default  reduce using rule 37 (comparison)

    operatorA     go to state 64
    compOperator  go to state 65


State 40

   31 unitA: unitB .
   32 unitB: unitB . operatorB element
   33      | unitB . operatorB call

    '/'  shift, and go to state 66
    '*'  shift, and go to state 67

    $default  reduce using rule 31 (unitA)

    operatorB  go to state 68


State 41

   39 comparisons: comparison .

    $default  reduce using rule 39 (comparisons)


State 42

   28 statement: comparisons .

    $default  reduce using rule 28 (statement)


State 43

   56 ifElseStructure: IFELSE '(' statement . $@4 ')' '{' lines $@5 '}' '{' lines '}'

    $default  reduce using rule 54 ($@4)

    $@4  go to state 69


State 44

   62 whileStructure: WHILE '(' @6 . statement @7 $@8 ')' '{' $@9 lines $@10 '}'

    ID      shift, and go to state 30
    NUM     shift, and go to state 31
    STRING  shift, and go to state 32
    '('     shift, and go to state 33
    '-'     shift, and go to state 34
    '!'     shift, and go to state 35

    call         go to state 36
    element      go to state 37
    statement    go to state 70
    unitA        go to state 39
    unitB        go to state 40
    comparison   go to state 41
    comparisons  go to state 42


State 45

   11 assign: ID . @1 '=' unitA

    $default  reduce using rule 10 (@1)

    @1  go to state 20


State 46

   70 forStructure: FOR '(' assign . ';' @11 statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 '}'

    ';'  shift, and go to state 71


State 47

   72 functionStructure: DEF ID @18 . '(' args ')' '{' lines '}'

    '('  shift, and go to state 72


State 48

   11 assign: ID @1 '=' unitA .
   30 unitA: unitA . operatorA unitB

    '-'  shift, and go to state 59
    '+'  shift, and go to state 61

    $default  reduce using rule 11 (assign)

    operatorA  go to state 64


State 49

   16 args: call . COM args
   17     | call .

    COM  shift, and go to state 73

    $default  reduce using rule 17 (args)


State 50

   13 call: ID @2 '(' args . ')'

    ')'  shift, and go to state 74


State 51

   14 args: element . COM args
   15     | element .

    COM  shift, and go to state 75

    $default  reduce using rule 15 (args)


State 52

   38 comparisons: '(' comparisons . ')' compOperator '(' comparisons ')'

    ')'  shift, and go to state 76


State 53

   21 element: '-' NUM .

    $default  reduce using rule 21 (element)


State 54

   29 statement: '!' comparisons .

    $default  reduce using rule 29 (statement)


State 55

   53 ifStructure: IF '(' statement $@3 . ')' '{' lines '}'

    ')'  shift, and go to state 77


State 56

   50 compOperator: AND .

    $default  reduce using rule 50 (compOperator)


State 57

   51 compOperator: OR .

    $default  reduce using rule 51 (compOperator)


State 58

   44 compOperator: '=' . '='

    '='  shift, and go to state 78


State 59

   41 operatorA: '-' .

    $default  reduce using rule 41 (operatorA)


State 60

   45 compOperator: '!' . '='

    '='  shift, and go to state 79


State 61

   40 operatorA: '+' .

    $default  reduce using rule 40 (operatorA)


State 62

   46 compOperator: '<' .
   48             | '<' . '='

    '='  shift, and go to state 80

    $default  reduce using rule 46 (compOperator)


State 63

   47 compOperator: '>' .
   49             | '>' . '='

    '='  shift, and go to state 81

    $default  reduce using rule 47 (compOperator)


State 64

   30 unitA: unitA operatorA . unitB

    ID      shift, and go to state 30
    NUM     shift, and go to state 31
    STRING  shift, and go to state 32
    '-'     shift, and go to state 34

    call     go to state 36
    element  go to state 37
    unitB    go to state 82


State 65

   36 comparison: unitA compOperator . comparison

    ID      shift, and go to state 30
    NUM     shift, and go to state 31
    STRING  shift, and go to state 32
    '-'     shift, and go to state 34

    call        go to state 36
    element     go to state 37
    unitA       go to state 39
    unitB       go to state 40
    comparison  go to state 83


State 66

   42 operatorB: '/' .

    $default  reduce using rule 42 (operatorB)


State 67

   43 operatorB: '*' .

    $default  reduce using rule 43 (operatorB)


State 68

   32 unitB: unitB operatorB . element
   33      | unitB operatorB . call

    ID      shift, and go to state 30
    NUM     shift, and go to state 31
    STRING  shift, and go to state 32
    '-'     shift, and go to state 34

    call     go to state 84
    element  go to state 85


State 69

   56 ifElseStructure: IFELSE '(' statement $@4 . ')' '{' lines $@5 '}' '{' lines '}'

    ')'  shift, and go to state 86


State 70

   62 whileStructure: WHILE '(' @6 statement . @7 $@8 ')' '{' $@9 lines $@10 '}'

    $default  reduce using rule 58 (@7)

    @7  go to state 87


State 71

   70 forStructure: FOR '(' assign ';' . @11 statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 '}'

    $default  reduce using rule 63 (@11)

    @11  go to state 88


State 72

   72 functionStructure: DEF ID @18 '(' . args ')' '{' lines '}'

    ID      shift, and go to state 30
    NUM     shift, and go to state 31
    STRING  shift, and go to state 32
    '-'     shift, and go to state 34

    $default  reduce using rule 18 (args)

    call     go to state 49
    args     go to state 89
    element  go to state 51


State 73

   16 args: call COM . args

    ID      shift, and go to state 30
    NUM     shift, and go to state 31
    STRING  shift, and go to state 32
    '-'     shift, and go to state 34

    $default  reduce using rule 18 (args)

    call     go to state 49
    args     go to state 90
    element  go to state 51


State 74

   13 call: ID @2 '(' args ')' .

    $default  reduce using rule 13 (call)


State 75

   14 args: element COM . args

    ID      shift, and go to state 30
    NUM     shift, and go to state 31
    STRING  shift, and go to state 32
    '-'     shift, and go to state 34

    $default  reduce using rule 18 (args)

    call     go to state 49
    args     go to state 91
    element  go to state 51


State 76

   38 comparisons: '(' comparisons ')' . compOperator '(' comparisons ')'

    AND  shift, and go to state 56
    OR   shift, and go to state 57
    '='  shift, and go to state 58
    '!'  shift, and go to state 60
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63

    compOperator  go to state 92


State 77

   53 ifStructure: IF '(' statement $@3 ')' . '{' lines '}'

    '{'  shift, and go to state 93


State 78

   44 compOperator: '=' '=' .

    $default  reduce using rule 44 (compOperator)


State 79

   45 compOperator: '!' '=' .

    $default  reduce using rule 45 (compOperator)


State 80

   48 compOperator: '<' '=' .

    $default  reduce using rule 48 (compOperator)


State 81

   49 compOperator: '>' '=' .

    $default  reduce using rule 49 (compOperator)


State 82

   30 unitA: unitA operatorA unitB .
   32 unitB: unitB . operatorB element
   33      | unitB . operatorB call

    '/'  shift, and go to state 66
    '*'  shift, and go to state 67

    $default  reduce using rule 30 (unitA)

    operatorB  go to state 68


State 83

   36 comparison: unitA compOperator comparison .

    $default  reduce using rule 36 (comparison)


State 84

   33 unitB: unitB operatorB call .

    $default  reduce using rule 33 (unitB)


State 85

   32 unitB: unitB operatorB element .

    $default  reduce using rule 32 (unitB)


State 86

   56 ifElseStructure: IFELSE '(' statement $@4 ')' . '{' lines $@5 '}' '{' lines '}'

    '{'  shift, and go to state 94


State 87

   62 whileStructure: WHILE '(' @6 statement @7 . $@8 ')' '{' $@9 lines $@10 '}'

    $default  reduce using rule 59 ($@8)

    $@8  go to state 95


State 88

   70 forStructure: FOR '(' assign ';' @11 . statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 '}'

    ID      shift, and go to state 30
    NUM     shift, and go to state 31
    STRING  shift, and go to state 32
    '('     shift, and go to state 33
    '-'     shift, and go to state 34
    '!'     shift, and go to state 35

    call         go to state 36
    element      go to state 37
    statement    go to state 96
    unitA        go to state 39
    unitB        go to state 40
    comparison   go to state 41
    comparisons  go to state 42


State 89

   72 functionStructure: DEF ID @18 '(' args . ')' '{' lines '}'

    ')'  shift, and go to state 97


State 90

   16 args: call COM args .

    $default  reduce using rule 16 (args)


State 91

   14 args: element COM args .

    $default  reduce using rule 14 (args)


State 92

   38 comparisons: '(' comparisons ')' compOperator . '(' comparisons ')'

    '('  shift, and go to state 98


State 93

   53 ifStructure: IF '(' statement $@3 ')' '{' . lines '}'

    ID      shift, and go to state 3
    ENTER   shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    DEF     shift, and go to state 9

    lines              go to state 99
    line               go to state 100
    exp                go to state 11
    assign             go to state 12
    call               go to state 13
    structure          go to state 14
    ifStructure        go to state 15
    ifElseStructure    go to state 16
    whileStructure     go to state 17
    forStructure       go to state 18
    functionStructure  go to state 19


State 94

   56 ifElseStructure: IFELSE '(' statement $@4 ')' '{' . lines $@5 '}' '{' lines '}'

    ID      shift, and go to state 3
    ENTER   shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    DEF     shift, and go to state 9

    lines              go to state 101
    line               go to state 100
    exp                go to state 11
    assign             go to state 12
    call               go to state 13
    structure          go to state 14
    ifStructure        go to state 15
    ifElseStructure    go to state 16
    whileStructure     go to state 17
    forStructure       go to state 18
    functionStructure  go to state 19


State 95

   62 whileStructure: WHILE '(' @6 statement @7 $@8 . ')' '{' $@9 lines $@10 '}'

    ')'  shift, and go to state 102


State 96

   70 forStructure: FOR '(' assign ';' @11 statement . @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 '}'

    $default  reduce using rule 64 (@12)

    @12  go to state 103


State 97

   72 functionStructure: DEF ID @18 '(' args ')' . '{' lines '}'

    '{'  shift, and go to state 104


State 98

   38 comparisons: '(' comparisons ')' compOperator '(' . comparisons ')'

    ID      shift, and go to state 30
    NUM     shift, and go to state 31
    STRING  shift, and go to state 32
    '('     shift, and go to state 33
    '-'     shift, and go to state 34

    call         go to state 36
    element      go to state 37
    unitA        go to state 39
    unitB        go to state 40
    comparison   go to state 41
    comparisons  go to state 105


State 99

   53 ifStructure: IF '(' statement $@3 ')' '{' lines . '}'

    '}'  shift, and go to state 106


State 100

    3 lines: line . lines
    4      | line .

    ID      shift, and go to state 3
    ENTER   shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    DEF     shift, and go to state 9

    $default  reduce using rule 4 (lines)

    lines              go to state 107
    line               go to state 100
    exp                go to state 11
    assign             go to state 12
    call               go to state 13
    structure          go to state 14
    ifStructure        go to state 15
    ifElseStructure    go to state 16
    whileStructure     go to state 17
    forStructure       go to state 18
    functionStructure  go to state 19


State 101

   56 ifElseStructure: IFELSE '(' statement $@4 ')' '{' lines . $@5 '}' '{' lines '}'

    $default  reduce using rule 55 ($@5)

    $@5  go to state 108


State 102

   62 whileStructure: WHILE '(' @6 statement @7 $@8 ')' . '{' $@9 lines $@10 '}'

    '{'  shift, and go to state 109


State 103

   70 forStructure: FOR '(' assign ';' @11 statement @12 . $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 '}'

    $default  reduce using rule 65 ($@13)

    $@13  go to state 110


State 104

   72 functionStructure: DEF ID @18 '(' args ')' '{' . lines '}'

    ID      shift, and go to state 3
    ENTER   shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    DEF     shift, and go to state 9

    lines              go to state 111
    line               go to state 100
    exp                go to state 11
    assign             go to state 12
    call               go to state 13
    structure          go to state 14
    ifStructure        go to state 15
    ifElseStructure    go to state 16
    whileStructure     go to state 17
    forStructure       go to state 18
    functionStructure  go to state 19


State 105

   38 comparisons: '(' comparisons ')' compOperator '(' comparisons . ')'

    ')'  shift, and go to state 112


State 106

   53 ifStructure: IF '(' statement $@3 ')' '{' lines '}' .

    $default  reduce using rule 53 (ifStructure)


State 107

    3 lines: line lines .

    $default  reduce using rule 3 (lines)


State 108

   56 ifElseStructure: IFELSE '(' statement $@4 ')' '{' lines $@5 . '}' '{' lines '}'

    '}'  shift, and go to state 113


State 109

   62 whileStructure: WHILE '(' @6 statement @7 $@8 ')' '{' . $@9 lines $@10 '}'

    $default  reduce using rule 60 ($@9)

    $@9  go to state 114


State 110

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 . ';' @14 assign @15 ')' '{' $@16 lines $@17 '}'

    ';'  shift, and go to state 115


State 111

   72 functionStructure: DEF ID @18 '(' args ')' '{' lines . '}'

    '}'  shift, and go to state 116


State 112

   38 comparisons: '(' comparisons ')' compOperator '(' comparisons ')' .

    $default  reduce using rule 38 (comparisons)


State 113

   56 ifElseStructure: IFELSE '(' statement $@4 ')' '{' lines $@5 '}' . '{' lines '}'

    '{'  shift, and go to state 117


State 114

   62 whileStructure: WHILE '(' @6 statement @7 $@8 ')' '{' $@9 . lines $@10 '}'

    ID      shift, and go to state 3
    ENTER   shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    DEF     shift, and go to state 9

    lines              go to state 118
    line               go to state 100
    exp                go to state 11
    assign             go to state 12
    call               go to state 13
    structure          go to state 14
    ifStructure        go to state 15
    ifElseStructure    go to state 16
    whileStructure     go to state 17
    forStructure       go to state 18
    functionStructure  go to state 19


State 115

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' . @14 assign @15 ')' '{' $@16 lines $@17 '}'

    $default  reduce using rule 66 (@14)

    @14  go to state 119


State 116

   72 functionStructure: DEF ID @18 '(' args ')' '{' lines '}' .

    $default  reduce using rule 72 (functionStructure)


State 117

   56 ifElseStructure: IFELSE '(' statement $@4 ')' '{' lines $@5 '}' '{' . lines '}'

    ID      shift, and go to state 3
    ENTER   shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    DEF     shift, and go to state 9

    lines              go to state 120
    line               go to state 100
    exp                go to state 11
    assign             go to state 12
    call               go to state 13
    structure          go to state 14
    ifStructure        go to state 15
    ifElseStructure    go to state 16
    whileStructure     go to state 17
    forStructure       go to state 18
    functionStructure  go to state 19


State 118

   62 whileStructure: WHILE '(' @6 statement @7 $@8 ')' '{' $@9 lines . $@10 '}'

    $default  reduce using rule 61 ($@10)

    $@10  go to state 121


State 119

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 . assign @15 ')' '{' $@16 lines $@17 '}'

    ID  shift, and go to state 45

    assign  go to state 122


State 120

   56 ifElseStructure: IFELSE '(' statement $@4 ')' '{' lines $@5 '}' '{' lines . '}'

    '}'  shift, and go to state 123


State 121

   62 whileStructure: WHILE '(' @6 statement @7 $@8 ')' '{' $@9 lines $@10 . '}'

    '}'  shift, and go to state 124


State 122

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 assign . @15 ')' '{' $@16 lines $@17 '}'

    $default  reduce using rule 67 (@15)

    @15  go to state 125


State 123

   56 ifElseStructure: IFELSE '(' statement $@4 ')' '{' lines $@5 '}' '{' lines '}' .

    $default  reduce using rule 56 (ifElseStructure)


State 124

   62 whileStructure: WHILE '(' @6 statement @7 $@8 ')' '{' $@9 lines $@10 '}' .

    $default  reduce using rule 62 (whileStructure)


State 125

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 assign @15 . ')' '{' $@16 lines $@17 '}'

    ')'  shift, and go to state 126


State 126

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 assign @15 ')' . '{' $@16 lines $@17 '}'

    '{'  shift, and go to state 127


State 127

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 assign @15 ')' '{' . $@16 lines $@17 '}'

    $default  reduce using rule 68 ($@16)

    $@16  go to state 128


State 128

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 . lines $@17 '}'

    ID      shift, and go to state 3
    ENTER   shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    DEF     shift, and go to state 9

    lines              go to state 129
    line               go to state 100
    exp                go to state 11
    assign             go to state 12
    call               go to state 13
    structure          go to state 14
    ifStructure        go to state 15
    ifElseStructure    go to state 16
    whileStructure     go to state 17
    forStructure       go to state 18
    functionStructure  go to state 19


State 129

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines . $@17 '}'

    $default  reduce using rule 69 ($@17)

    $@17  go to state 130


State 130

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 . '}'

    '}'  shift, and go to state 131


State 131

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 '}' .

    $default  reduce using rule 70 (forStructure)

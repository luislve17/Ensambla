Terminales no usados en la gramática

   TRUEASSIGN
   ASSIGN
   SUM
   RES
   MUL
   DIV
   EVAL
   EQ
   NEQ
   LES
   MOR
   LEQ
   MEQ
   ITERLIMIT


Gramática

    0 $accept: root $end

    1 root: %empty
    2     | root line

    3 lines: line lines
    4      | line

    5 line: structure
    6     | exp ';'
    7     | ENTER

    8 exp: assign
    9    | call

   10 @1: %empty

   11 assign: ID @1 '=' unitA

   12 @2: %empty

   13 call: ID @2 '(' args ')'

   14 args: element COM args
   15     | element
   16     | call COM args
   17     | call
   18     | %empty

   19 element: ID
   20        | NUM
   21        | '-' NUM
   22        | STRING

   23 structure: ifStructure
   24          | ifElseStructure
   25          | whileStructure
   26          | forStructure
   27          | functionStructure

   28 statement: comparisons
   29          | '!' comparisons

   30 unitA: unitA operatorA unitB
   31      | unitB

   32 unitB: unitB operatorB element
   33      | unitB operatorB call
   34      | element
   35      | call

   36 comparison: unitA compOperator comparison
   37           | unitA

   38 comparisons: '(' comparisons ')' compOperator '(' comparisons ')'
   39            | comparison

   40 operatorA: '+'
   41          | '-'

   42 operatorB: '/'
   43          | '*'

   44 compOperator: '=' '='
   45             | '!' '='
   46             | '<'
   47             | '>'
   48             | '<' '='
   49             | '>' '='
   50             | AND
   51             | OR

   52 $@3: %empty

   53 ifStructure: IF '(' statement $@3 ')' '{' lines '}'

   54 $@4: %empty

   55 $@5: %empty

   56 ifElseStructure: IFELSE '(' statement $@4 ')' '{' lines $@5 '}' '{' lines '}'

   57 @6: %empty

   58 @7: %empty

   59 $@8: %empty

   60 $@9: %empty

   61 $@10: %empty

   62 whileStructure: WHILE '(' @6 statement @7 $@8 ')' '{' $@9 lines $@10 '}'

   63 @11: %empty

   64 @12: %empty

   65 $@13: %empty

   66 @14: %empty

   67 @15: %empty

   68 $@16: %empty

   69 $@17: %empty

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 '}'

   71 @18: %empty

   72 functionStructure: DEF ID @18 '(' args ')' '{' lines '}'


Terminales con las reglas donde aparecen

$end (0) 0
'!' (33) 29 45
'(' (40) 13 38 53 56 62 70 72
')' (41) 13 38 53 56 62 70 72
'*' (42) 43
'+' (43) 40
'-' (45) 21 41
'/' (47) 42
';' (59) 6 70
'<' (60) 46 48
'=' (61) 11 44 45 48 49
'>' (62) 47 49
'{' (123) 53 56 62 70 72
'}' (125) 53 56 62 70 72
error (256)
ID (258) 11 13 19 72
NUM (259) 20 21
ENTER (260) 7
STRING (261) 22
COM (262) 14 16
IF (263) 53
IFELSE (264) 56
WHILE (265) 62
FOR (266) 70
DEF (267) 72
TRUEASSIGN (268)
ASSIGN (269)
SUM (270)
RES (271)
MUL (272)
DIV (273)
EVAL (274)
EQ (275)
NEQ (276)
LES (277)
MOR (278)
LEQ (279)
MEQ (280)
ITERLIMIT (281)
AND (282) 50
OR (283) 51


No terminales con las reglas donde aparecen

$accept (42)
    en la izquierda: 0
root (43)
    en la izquierda: 1 2, en la derecha: 0 2
lines (44)
    en la izquierda: 3 4, en la derecha: 3 53 56 62 70 72
line (45)
    en la izquierda: 5 6 7, en la derecha: 2 3 4
exp (46)
    en la izquierda: 8 9, en la derecha: 6
assign (47)
    en la izquierda: 11, en la derecha: 8 70
@1 (48)
    en la izquierda: 10, en la derecha: 11
call (49)
    en la izquierda: 13, en la derecha: 9 16 17 33 35
@2 (50)
    en la izquierda: 12, en la derecha: 13
args (51)
    en la izquierda: 14 15 16 17 18, en la derecha: 13 14 16 72
element (52)
    en la izquierda: 19 20 21 22, en la derecha: 14 15 32 34
structure (53)
    en la izquierda: 23 24 25 26 27, en la derecha: 5
statement (54)
    en la izquierda: 28 29, en la derecha: 53 56 62 70
unitA (55)
    en la izquierda: 30 31, en la derecha: 11 30 36 37
unitB (56)
    en la izquierda: 32 33 34 35, en la derecha: 30 31 32 33
comparison (57)
    en la izquierda: 36 37, en la derecha: 36 39
comparisons (58)
    en la izquierda: 38 39, en la derecha: 28 29 38
operatorA (59)
    en la izquierda: 40 41, en la derecha: 30
operatorB (60)
    en la izquierda: 42 43, en la derecha: 32 33
compOperator (61)
    en la izquierda: 44 45 46 47 48 49 50 51, en la derecha: 36 38
ifStructure (62)
    en la izquierda: 53, en la derecha: 23
$@3 (63)
    en la izquierda: 52, en la derecha: 53
ifElseStructure (64)
    en la izquierda: 56, en la derecha: 24
$@4 (65)
    en la izquierda: 54, en la derecha: 56
$@5 (66)
    en la izquierda: 55, en la derecha: 56
whileStructure (67)
    en la izquierda: 62, en la derecha: 25
@6 (68)
    en la izquierda: 57, en la derecha: 62
@7 (69)
    en la izquierda: 58, en la derecha: 62
$@8 (70)
    en la izquierda: 59, en la derecha: 62
$@9 (71)
    en la izquierda: 60, en la derecha: 62
$@10 (72)
    en la izquierda: 61, en la derecha: 62
forStructure (73)
    en la izquierda: 70, en la derecha: 26
@11 (74)
    en la izquierda: 63, en la derecha: 70
@12 (75)
    en la izquierda: 64, en la derecha: 70
$@13 (76)
    en la izquierda: 65, en la derecha: 70
@14 (77)
    en la izquierda: 66, en la derecha: 70
@15 (78)
    en la izquierda: 67, en la derecha: 70
$@16 (79)
    en la izquierda: 68, en la derecha: 70
$@17 (80)
    en la izquierda: 69, en la derecha: 70
functionStructure (81)
    en la izquierda: 72, en la derecha: 27
@18 (82)
    en la izquierda: 71, en la derecha: 72


Estado 0

    0 $accept: . root $end

    $default  reduce usando la regla 1 (root)

    root  ir al estado 1


Estado 1

    0 $accept: root . $end
    2 root: root . line

    $end    desplazar e ir al estado 2
    ID      desplazar e ir al estado 3
    ENTER   desplazar e ir al estado 4
    IF      desplazar e ir al estado 5
    IFELSE  desplazar e ir al estado 6
    WHILE   desplazar e ir al estado 7
    FOR     desplazar e ir al estado 8
    DEF     desplazar e ir al estado 9

    line               ir al estado 10
    exp                ir al estado 11
    assign             ir al estado 12
    call               ir al estado 13
    structure          ir al estado 14
    ifStructure        ir al estado 15
    ifElseStructure    ir al estado 16
    whileStructure     ir al estado 17
    forStructure       ir al estado 18
    functionStructure  ir al estado 19


Estado 2

    0 $accept: root $end .

    $default  aceptar


Estado 3

   11 assign: ID . @1 '=' unitA
   13 call: ID . @2 '(' args ')'

    '('       reduce usando la regla 12 (@2)
    $default  reduce usando la regla 10 (@1)

    @1  ir al estado 20
    @2  ir al estado 21


Estado 4

    7 line: ENTER .

    $default  reduce usando la regla 7 (line)


Estado 5

   53 ifStructure: IF . '(' statement $@3 ')' '{' lines '}'

    '('  desplazar e ir al estado 22


Estado 6

   56 ifElseStructure: IFELSE . '(' statement $@4 ')' '{' lines $@5 '}' '{' lines '}'

    '('  desplazar e ir al estado 23


Estado 7

   62 whileStructure: WHILE . '(' @6 statement @7 $@8 ')' '{' $@9 lines $@10 '}'

    '('  desplazar e ir al estado 24


Estado 8

   70 forStructure: FOR . '(' assign ';' @11 statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 '}'

    '('  desplazar e ir al estado 25


Estado 9

   72 functionStructure: DEF . ID @18 '(' args ')' '{' lines '}'

    ID  desplazar e ir al estado 26


Estado 10

    2 root: root line .

    $default  reduce usando la regla 2 (root)


Estado 11

    6 line: exp . ';'

    ';'  desplazar e ir al estado 27


Estado 12

    8 exp: assign .

    $default  reduce usando la regla 8 (exp)


Estado 13

    9 exp: call .

    $default  reduce usando la regla 9 (exp)


Estado 14

    5 line: structure .

    $default  reduce usando la regla 5 (line)


Estado 15

   23 structure: ifStructure .

    $default  reduce usando la regla 23 (structure)


Estado 16

   24 structure: ifElseStructure .

    $default  reduce usando la regla 24 (structure)


Estado 17

   25 structure: whileStructure .

    $default  reduce usando la regla 25 (structure)


Estado 18

   26 structure: forStructure .

    $default  reduce usando la regla 26 (structure)


Estado 19

   27 structure: functionStructure .

    $default  reduce usando la regla 27 (structure)


Estado 20

   11 assign: ID @1 . '=' unitA

    '='  desplazar e ir al estado 28


Estado 21

   13 call: ID @2 . '(' args ')'

    '('  desplazar e ir al estado 29


Estado 22

   53 ifStructure: IF '(' . statement $@3 ')' '{' lines '}'

    ID      desplazar e ir al estado 30
    NUM     desplazar e ir al estado 31
    STRING  desplazar e ir al estado 32
    '('     desplazar e ir al estado 33
    '-'     desplazar e ir al estado 34
    '!'     desplazar e ir al estado 35

    call         ir al estado 36
    element      ir al estado 37
    statement    ir al estado 38
    unitA        ir al estado 39
    unitB        ir al estado 40
    comparison   ir al estado 41
    comparisons  ir al estado 42


Estado 23

   56 ifElseStructure: IFELSE '(' . statement $@4 ')' '{' lines $@5 '}' '{' lines '}'

    ID      desplazar e ir al estado 30
    NUM     desplazar e ir al estado 31
    STRING  desplazar e ir al estado 32
    '('     desplazar e ir al estado 33
    '-'     desplazar e ir al estado 34
    '!'     desplazar e ir al estado 35

    call         ir al estado 36
    element      ir al estado 37
    statement    ir al estado 43
    unitA        ir al estado 39
    unitB        ir al estado 40
    comparison   ir al estado 41
    comparisons  ir al estado 42


Estado 24

   62 whileStructure: WHILE '(' . @6 statement @7 $@8 ')' '{' $@9 lines $@10 '}'

    $default  reduce usando la regla 57 (@6)

    @6  ir al estado 44


Estado 25

   70 forStructure: FOR '(' . assign ';' @11 statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 '}'

    ID  desplazar e ir al estado 45

    assign  ir al estado 46


Estado 26

   72 functionStructure: DEF ID . @18 '(' args ')' '{' lines '}'

    $default  reduce usando la regla 71 (@18)

    @18  ir al estado 47


Estado 27

    6 line: exp ';' .

    $default  reduce usando la regla 6 (line)


Estado 28

   11 assign: ID @1 '=' . unitA

    ID      desplazar e ir al estado 30
    NUM     desplazar e ir al estado 31
    STRING  desplazar e ir al estado 32
    '-'     desplazar e ir al estado 34

    call     ir al estado 36
    element  ir al estado 37
    unitA    ir al estado 48
    unitB    ir al estado 40


Estado 29

   13 call: ID @2 '(' . args ')'

    ID      desplazar e ir al estado 30
    NUM     desplazar e ir al estado 31
    STRING  desplazar e ir al estado 32
    '-'     desplazar e ir al estado 34

    $default  reduce usando la regla 18 (args)

    call     ir al estado 49
    args     ir al estado 50
    element  ir al estado 51


Estado 30

   13 call: ID . @2 '(' args ')'
   19 element: ID .

    '('       reduce usando la regla 12 (@2)
    $default  reduce usando la regla 19 (element)

    @2  ir al estado 21


Estado 31

   20 element: NUM .

    $default  reduce usando la regla 20 (element)


Estado 32

   22 element: STRING .

    $default  reduce usando la regla 22 (element)


Estado 33

   38 comparisons: '(' . comparisons ')' compOperator '(' comparisons ')'

    ID      desplazar e ir al estado 30
    NUM     desplazar e ir al estado 31
    STRING  desplazar e ir al estado 32
    '('     desplazar e ir al estado 33
    '-'     desplazar e ir al estado 34

    call         ir al estado 36
    element      ir al estado 37
    unitA        ir al estado 39
    unitB        ir al estado 40
    comparison   ir al estado 41
    comparisons  ir al estado 52


Estado 34

   21 element: '-' . NUM

    NUM  desplazar e ir al estado 53


Estado 35

   29 statement: '!' . comparisons

    ID      desplazar e ir al estado 30
    NUM     desplazar e ir al estado 31
    STRING  desplazar e ir al estado 32
    '('     desplazar e ir al estado 33
    '-'     desplazar e ir al estado 34

    call         ir al estado 36
    element      ir al estado 37
    unitA        ir al estado 39
    unitB        ir al estado 40
    comparison   ir al estado 41
    comparisons  ir al estado 54


Estado 36

   35 unitB: call .

    $default  reduce usando la regla 35 (unitB)


Estado 37

   34 unitB: element .

    $default  reduce usando la regla 34 (unitB)


Estado 38

   53 ifStructure: IF '(' statement . $@3 ')' '{' lines '}'

    $default  reduce usando la regla 52 ($@3)

    $@3  ir al estado 55


Estado 39

   30 unitA: unitA . operatorA unitB
   36 comparison: unitA . compOperator comparison
   37           | unitA .

    AND  desplazar e ir al estado 56
    OR   desplazar e ir al estado 57
    '='  desplazar e ir al estado 58
    '-'  desplazar e ir al estado 59
    '!'  desplazar e ir al estado 60
    '+'  desplazar e ir al estado 61
    '<'  desplazar e ir al estado 62
    '>'  desplazar e ir al estado 63

    $default  reduce usando la regla 37 (comparison)

    operatorA     ir al estado 64
    compOperator  ir al estado 65


Estado 40

   31 unitA: unitB .
   32 unitB: unitB . operatorB element
   33      | unitB . operatorB call

    '/'  desplazar e ir al estado 66
    '*'  desplazar e ir al estado 67

    $default  reduce usando la regla 31 (unitA)

    operatorB  ir al estado 68


Estado 41

   39 comparisons: comparison .

    $default  reduce usando la regla 39 (comparisons)


Estado 42

   28 statement: comparisons .

    $default  reduce usando la regla 28 (statement)


Estado 43

   56 ifElseStructure: IFELSE '(' statement . $@4 ')' '{' lines $@5 '}' '{' lines '}'

    $default  reduce usando la regla 54 ($@4)

    $@4  ir al estado 69


Estado 44

   62 whileStructure: WHILE '(' @6 . statement @7 $@8 ')' '{' $@9 lines $@10 '}'

    ID      desplazar e ir al estado 30
    NUM     desplazar e ir al estado 31
    STRING  desplazar e ir al estado 32
    '('     desplazar e ir al estado 33
    '-'     desplazar e ir al estado 34
    '!'     desplazar e ir al estado 35

    call         ir al estado 36
    element      ir al estado 37
    statement    ir al estado 70
    unitA        ir al estado 39
    unitB        ir al estado 40
    comparison   ir al estado 41
    comparisons  ir al estado 42


Estado 45

   11 assign: ID . @1 '=' unitA

    $default  reduce usando la regla 10 (@1)

    @1  ir al estado 20


Estado 46

   70 forStructure: FOR '(' assign . ';' @11 statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 '}'

    ';'  desplazar e ir al estado 71


Estado 47

   72 functionStructure: DEF ID @18 . '(' args ')' '{' lines '}'

    '('  desplazar e ir al estado 72


Estado 48

   11 assign: ID @1 '=' unitA .
   30 unitA: unitA . operatorA unitB

    '-'  desplazar e ir al estado 59
    '+'  desplazar e ir al estado 61

    $default  reduce usando la regla 11 (assign)

    operatorA  ir al estado 64


Estado 49

   16 args: call . COM args
   17     | call .

    COM  desplazar e ir al estado 73

    $default  reduce usando la regla 17 (args)


Estado 50

   13 call: ID @2 '(' args . ')'

    ')'  desplazar e ir al estado 74


Estado 51

   14 args: element . COM args
   15     | element .

    COM  desplazar e ir al estado 75

    $default  reduce usando la regla 15 (args)


Estado 52

   38 comparisons: '(' comparisons . ')' compOperator '(' comparisons ')'

    ')'  desplazar e ir al estado 76


Estado 53

   21 element: '-' NUM .

    $default  reduce usando la regla 21 (element)


Estado 54

   29 statement: '!' comparisons .

    $default  reduce usando la regla 29 (statement)


Estado 55

   53 ifStructure: IF '(' statement $@3 . ')' '{' lines '}'

    ')'  desplazar e ir al estado 77


Estado 56

   50 compOperator: AND .

    $default  reduce usando la regla 50 (compOperator)


Estado 57

   51 compOperator: OR .

    $default  reduce usando la regla 51 (compOperator)


Estado 58

   44 compOperator: '=' . '='

    '='  desplazar e ir al estado 78


Estado 59

   41 operatorA: '-' .

    $default  reduce usando la regla 41 (operatorA)


Estado 60

   45 compOperator: '!' . '='

    '='  desplazar e ir al estado 79


Estado 61

   40 operatorA: '+' .

    $default  reduce usando la regla 40 (operatorA)


Estado 62

   46 compOperator: '<' .
   48             | '<' . '='

    '='  desplazar e ir al estado 80

    $default  reduce usando la regla 46 (compOperator)


Estado 63

   47 compOperator: '>' .
   49             | '>' . '='

    '='  desplazar e ir al estado 81

    $default  reduce usando la regla 47 (compOperator)


Estado 64

   30 unitA: unitA operatorA . unitB

    ID      desplazar e ir al estado 30
    NUM     desplazar e ir al estado 31
    STRING  desplazar e ir al estado 32
    '-'     desplazar e ir al estado 34

    call     ir al estado 36
    element  ir al estado 37
    unitB    ir al estado 82


Estado 65

   36 comparison: unitA compOperator . comparison

    ID      desplazar e ir al estado 30
    NUM     desplazar e ir al estado 31
    STRING  desplazar e ir al estado 32
    '-'     desplazar e ir al estado 34

    call        ir al estado 36
    element     ir al estado 37
    unitA       ir al estado 39
    unitB       ir al estado 40
    comparison  ir al estado 83


Estado 66

   42 operatorB: '/' .

    $default  reduce usando la regla 42 (operatorB)


Estado 67

   43 operatorB: '*' .

    $default  reduce usando la regla 43 (operatorB)


Estado 68

   32 unitB: unitB operatorB . element
   33      | unitB operatorB . call

    ID      desplazar e ir al estado 30
    NUM     desplazar e ir al estado 31
    STRING  desplazar e ir al estado 32
    '-'     desplazar e ir al estado 34

    call     ir al estado 84
    element  ir al estado 85


Estado 69

   56 ifElseStructure: IFELSE '(' statement $@4 . ')' '{' lines $@5 '}' '{' lines '}'

    ')'  desplazar e ir al estado 86


Estado 70

   62 whileStructure: WHILE '(' @6 statement . @7 $@8 ')' '{' $@9 lines $@10 '}'

    $default  reduce usando la regla 58 (@7)

    @7  ir al estado 87


Estado 71

   70 forStructure: FOR '(' assign ';' . @11 statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 '}'

    $default  reduce usando la regla 63 (@11)

    @11  ir al estado 88


Estado 72

   72 functionStructure: DEF ID @18 '(' . args ')' '{' lines '}'

    ID      desplazar e ir al estado 30
    NUM     desplazar e ir al estado 31
    STRING  desplazar e ir al estado 32
    '-'     desplazar e ir al estado 34

    $default  reduce usando la regla 18 (args)

    call     ir al estado 49
    args     ir al estado 89
    element  ir al estado 51


Estado 73

   16 args: call COM . args

    ID      desplazar e ir al estado 30
    NUM     desplazar e ir al estado 31
    STRING  desplazar e ir al estado 32
    '-'     desplazar e ir al estado 34

    $default  reduce usando la regla 18 (args)

    call     ir al estado 49
    args     ir al estado 90
    element  ir al estado 51


Estado 74

   13 call: ID @2 '(' args ')' .

    $default  reduce usando la regla 13 (call)


Estado 75

   14 args: element COM . args

    ID      desplazar e ir al estado 30
    NUM     desplazar e ir al estado 31
    STRING  desplazar e ir al estado 32
    '-'     desplazar e ir al estado 34

    $default  reduce usando la regla 18 (args)

    call     ir al estado 49
    args     ir al estado 91
    element  ir al estado 51


Estado 76

   38 comparisons: '(' comparisons ')' . compOperator '(' comparisons ')'

    AND  desplazar e ir al estado 56
    OR   desplazar e ir al estado 57
    '='  desplazar e ir al estado 58
    '!'  desplazar e ir al estado 60
    '<'  desplazar e ir al estado 62
    '>'  desplazar e ir al estado 63

    compOperator  ir al estado 92


Estado 77

   53 ifStructure: IF '(' statement $@3 ')' . '{' lines '}'

    '{'  desplazar e ir al estado 93


Estado 78

   44 compOperator: '=' '=' .

    $default  reduce usando la regla 44 (compOperator)


Estado 79

   45 compOperator: '!' '=' .

    $default  reduce usando la regla 45 (compOperator)


Estado 80

   48 compOperator: '<' '=' .

    $default  reduce usando la regla 48 (compOperator)


Estado 81

   49 compOperator: '>' '=' .

    $default  reduce usando la regla 49 (compOperator)


Estado 82

   30 unitA: unitA operatorA unitB .
   32 unitB: unitB . operatorB element
   33      | unitB . operatorB call

    '/'  desplazar e ir al estado 66
    '*'  desplazar e ir al estado 67

    $default  reduce usando la regla 30 (unitA)

    operatorB  ir al estado 68


Estado 83

   36 comparison: unitA compOperator comparison .

    $default  reduce usando la regla 36 (comparison)


Estado 84

   33 unitB: unitB operatorB call .

    $default  reduce usando la regla 33 (unitB)


Estado 85

   32 unitB: unitB operatorB element .

    $default  reduce usando la regla 32 (unitB)


Estado 86

   56 ifElseStructure: IFELSE '(' statement $@4 ')' . '{' lines $@5 '}' '{' lines '}'

    '{'  desplazar e ir al estado 94


Estado 87

   62 whileStructure: WHILE '(' @6 statement @7 . $@8 ')' '{' $@9 lines $@10 '}'

    $default  reduce usando la regla 59 ($@8)

    $@8  ir al estado 95


Estado 88

   70 forStructure: FOR '(' assign ';' @11 . statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 '}'

    ID      desplazar e ir al estado 30
    NUM     desplazar e ir al estado 31
    STRING  desplazar e ir al estado 32
    '('     desplazar e ir al estado 33
    '-'     desplazar e ir al estado 34
    '!'     desplazar e ir al estado 35

    call         ir al estado 36
    element      ir al estado 37
    statement    ir al estado 96
    unitA        ir al estado 39
    unitB        ir al estado 40
    comparison   ir al estado 41
    comparisons  ir al estado 42


Estado 89

   72 functionStructure: DEF ID @18 '(' args . ')' '{' lines '}'

    ')'  desplazar e ir al estado 97


Estado 90

   16 args: call COM args .

    $default  reduce usando la regla 16 (args)


Estado 91

   14 args: element COM args .

    $default  reduce usando la regla 14 (args)


Estado 92

   38 comparisons: '(' comparisons ')' compOperator . '(' comparisons ')'

    '('  desplazar e ir al estado 98


Estado 93

   53 ifStructure: IF '(' statement $@3 ')' '{' . lines '}'

    ID      desplazar e ir al estado 3
    ENTER   desplazar e ir al estado 4
    IF      desplazar e ir al estado 5
    IFELSE  desplazar e ir al estado 6
    WHILE   desplazar e ir al estado 7
    FOR     desplazar e ir al estado 8
    DEF     desplazar e ir al estado 9

    lines              ir al estado 99
    line               ir al estado 100
    exp                ir al estado 11
    assign             ir al estado 12
    call               ir al estado 13
    structure          ir al estado 14
    ifStructure        ir al estado 15
    ifElseStructure    ir al estado 16
    whileStructure     ir al estado 17
    forStructure       ir al estado 18
    functionStructure  ir al estado 19


Estado 94

   56 ifElseStructure: IFELSE '(' statement $@4 ')' '{' . lines $@5 '}' '{' lines '}'

    ID      desplazar e ir al estado 3
    ENTER   desplazar e ir al estado 4
    IF      desplazar e ir al estado 5
    IFELSE  desplazar e ir al estado 6
    WHILE   desplazar e ir al estado 7
    FOR     desplazar e ir al estado 8
    DEF     desplazar e ir al estado 9

    lines              ir al estado 101
    line               ir al estado 100
    exp                ir al estado 11
    assign             ir al estado 12
    call               ir al estado 13
    structure          ir al estado 14
    ifStructure        ir al estado 15
    ifElseStructure    ir al estado 16
    whileStructure     ir al estado 17
    forStructure       ir al estado 18
    functionStructure  ir al estado 19


Estado 95

   62 whileStructure: WHILE '(' @6 statement @7 $@8 . ')' '{' $@9 lines $@10 '}'

    ')'  desplazar e ir al estado 102


Estado 96

   70 forStructure: FOR '(' assign ';' @11 statement . @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 '}'

    $default  reduce usando la regla 64 (@12)

    @12  ir al estado 103


Estado 97

   72 functionStructure: DEF ID @18 '(' args ')' . '{' lines '}'

    '{'  desplazar e ir al estado 104


Estado 98

   38 comparisons: '(' comparisons ')' compOperator '(' . comparisons ')'

    ID      desplazar e ir al estado 30
    NUM     desplazar e ir al estado 31
    STRING  desplazar e ir al estado 32
    '('     desplazar e ir al estado 33
    '-'     desplazar e ir al estado 34

    call         ir al estado 36
    element      ir al estado 37
    unitA        ir al estado 39
    unitB        ir al estado 40
    comparison   ir al estado 41
    comparisons  ir al estado 105


Estado 99

   53 ifStructure: IF '(' statement $@3 ')' '{' lines . '}'

    '}'  desplazar e ir al estado 106


Estado 100

    3 lines: line . lines
    4      | line .

    ID      desplazar e ir al estado 3
    ENTER   desplazar e ir al estado 4
    IF      desplazar e ir al estado 5
    IFELSE  desplazar e ir al estado 6
    WHILE   desplazar e ir al estado 7
    FOR     desplazar e ir al estado 8
    DEF     desplazar e ir al estado 9

    $default  reduce usando la regla 4 (lines)

    lines              ir al estado 107
    line               ir al estado 100
    exp                ir al estado 11
    assign             ir al estado 12
    call               ir al estado 13
    structure          ir al estado 14
    ifStructure        ir al estado 15
    ifElseStructure    ir al estado 16
    whileStructure     ir al estado 17
    forStructure       ir al estado 18
    functionStructure  ir al estado 19


Estado 101

   56 ifElseStructure: IFELSE '(' statement $@4 ')' '{' lines . $@5 '}' '{' lines '}'

    $default  reduce usando la regla 55 ($@5)

    $@5  ir al estado 108


Estado 102

   62 whileStructure: WHILE '(' @6 statement @7 $@8 ')' . '{' $@9 lines $@10 '}'

    '{'  desplazar e ir al estado 109


Estado 103

   70 forStructure: FOR '(' assign ';' @11 statement @12 . $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 '}'

    $default  reduce usando la regla 65 ($@13)

    $@13  ir al estado 110


Estado 104

   72 functionStructure: DEF ID @18 '(' args ')' '{' . lines '}'

    ID      desplazar e ir al estado 3
    ENTER   desplazar e ir al estado 4
    IF      desplazar e ir al estado 5
    IFELSE  desplazar e ir al estado 6
    WHILE   desplazar e ir al estado 7
    FOR     desplazar e ir al estado 8
    DEF     desplazar e ir al estado 9

    lines              ir al estado 111
    line               ir al estado 100
    exp                ir al estado 11
    assign             ir al estado 12
    call               ir al estado 13
    structure          ir al estado 14
    ifStructure        ir al estado 15
    ifElseStructure    ir al estado 16
    whileStructure     ir al estado 17
    forStructure       ir al estado 18
    functionStructure  ir al estado 19


Estado 105

   38 comparisons: '(' comparisons ')' compOperator '(' comparisons . ')'

    ')'  desplazar e ir al estado 112


Estado 106

   53 ifStructure: IF '(' statement $@3 ')' '{' lines '}' .

    $default  reduce usando la regla 53 (ifStructure)


Estado 107

    3 lines: line lines .

    $default  reduce usando la regla 3 (lines)


Estado 108

   56 ifElseStructure: IFELSE '(' statement $@4 ')' '{' lines $@5 . '}' '{' lines '}'

    '}'  desplazar e ir al estado 113


Estado 109

   62 whileStructure: WHILE '(' @6 statement @7 $@8 ')' '{' . $@9 lines $@10 '}'

    $default  reduce usando la regla 60 ($@9)

    $@9  ir al estado 114


Estado 110

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 . ';' @14 assign @15 ')' '{' $@16 lines $@17 '}'

    ';'  desplazar e ir al estado 115


Estado 111

   72 functionStructure: DEF ID @18 '(' args ')' '{' lines . '}'

    '}'  desplazar e ir al estado 116


Estado 112

   38 comparisons: '(' comparisons ')' compOperator '(' comparisons ')' .

    $default  reduce usando la regla 38 (comparisons)


Estado 113

   56 ifElseStructure: IFELSE '(' statement $@4 ')' '{' lines $@5 '}' . '{' lines '}'

    '{'  desplazar e ir al estado 117


Estado 114

   62 whileStructure: WHILE '(' @6 statement @7 $@8 ')' '{' $@9 . lines $@10 '}'

    ID      desplazar e ir al estado 3
    ENTER   desplazar e ir al estado 4
    IF      desplazar e ir al estado 5
    IFELSE  desplazar e ir al estado 6
    WHILE   desplazar e ir al estado 7
    FOR     desplazar e ir al estado 8
    DEF     desplazar e ir al estado 9

    lines              ir al estado 118
    line               ir al estado 100
    exp                ir al estado 11
    assign             ir al estado 12
    call               ir al estado 13
    structure          ir al estado 14
    ifStructure        ir al estado 15
    ifElseStructure    ir al estado 16
    whileStructure     ir al estado 17
    forStructure       ir al estado 18
    functionStructure  ir al estado 19


Estado 115

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' . @14 assign @15 ')' '{' $@16 lines $@17 '}'

    $default  reduce usando la regla 66 (@14)

    @14  ir al estado 119


Estado 116

   72 functionStructure: DEF ID @18 '(' args ')' '{' lines '}' .

    $default  reduce usando la regla 72 (functionStructure)


Estado 117

   56 ifElseStructure: IFELSE '(' statement $@4 ')' '{' lines $@5 '}' '{' . lines '}'

    ID      desplazar e ir al estado 3
    ENTER   desplazar e ir al estado 4
    IF      desplazar e ir al estado 5
    IFELSE  desplazar e ir al estado 6
    WHILE   desplazar e ir al estado 7
    FOR     desplazar e ir al estado 8
    DEF     desplazar e ir al estado 9

    lines              ir al estado 120
    line               ir al estado 100
    exp                ir al estado 11
    assign             ir al estado 12
    call               ir al estado 13
    structure          ir al estado 14
    ifStructure        ir al estado 15
    ifElseStructure    ir al estado 16
    whileStructure     ir al estado 17
    forStructure       ir al estado 18
    functionStructure  ir al estado 19


Estado 118

   62 whileStructure: WHILE '(' @6 statement @7 $@8 ')' '{' $@9 lines . $@10 '}'

    $default  reduce usando la regla 61 ($@10)

    $@10  ir al estado 121


Estado 119

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 . assign @15 ')' '{' $@16 lines $@17 '}'

    ID  desplazar e ir al estado 45

    assign  ir al estado 122


Estado 120

   56 ifElseStructure: IFELSE '(' statement $@4 ')' '{' lines $@5 '}' '{' lines . '}'

    '}'  desplazar e ir al estado 123


Estado 121

   62 whileStructure: WHILE '(' @6 statement @7 $@8 ')' '{' $@9 lines $@10 . '}'

    '}'  desplazar e ir al estado 124


Estado 122

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 assign . @15 ')' '{' $@16 lines $@17 '}'

    $default  reduce usando la regla 67 (@15)

    @15  ir al estado 125


Estado 123

   56 ifElseStructure: IFELSE '(' statement $@4 ')' '{' lines $@5 '}' '{' lines '}' .

    $default  reduce usando la regla 56 (ifElseStructure)


Estado 124

   62 whileStructure: WHILE '(' @6 statement @7 $@8 ')' '{' $@9 lines $@10 '}' .

    $default  reduce usando la regla 62 (whileStructure)


Estado 125

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 assign @15 . ')' '{' $@16 lines $@17 '}'

    ')'  desplazar e ir al estado 126


Estado 126

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 assign @15 ')' . '{' $@16 lines $@17 '}'

    '{'  desplazar e ir al estado 127


Estado 127

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 assign @15 ')' '{' . $@16 lines $@17 '}'

    $default  reduce usando la regla 68 ($@16)

    $@16  ir al estado 128


Estado 128

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 . lines $@17 '}'

    ID      desplazar e ir al estado 3
    ENTER   desplazar e ir al estado 4
    IF      desplazar e ir al estado 5
    IFELSE  desplazar e ir al estado 6
    WHILE   desplazar e ir al estado 7
    FOR     desplazar e ir al estado 8
    DEF     desplazar e ir al estado 9

    lines              ir al estado 129
    line               ir al estado 100
    exp                ir al estado 11
    assign             ir al estado 12
    call               ir al estado 13
    structure          ir al estado 14
    ifStructure        ir al estado 15
    ifElseStructure    ir al estado 16
    whileStructure     ir al estado 17
    forStructure       ir al estado 18
    functionStructure  ir al estado 19


Estado 129

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines . $@17 '}'

    $default  reduce usando la regla 69 ($@17)

    $@17  ir al estado 130


Estado 130

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 . '}'

    '}'  desplazar e ir al estado 131


Estado 131

   70 forStructure: FOR '(' assign ';' @11 statement @12 $@13 ';' @14 assign @15 ')' '{' $@16 lines $@17 '}' .

    $default  reduce usando la regla 70 (forStructure)
